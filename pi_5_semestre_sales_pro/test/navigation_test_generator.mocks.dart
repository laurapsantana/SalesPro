// Mocks generated by Mockito 5.4.4 from annotations
// in pi_5_semestre_sales_pro/test/navigation_test_generator.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;
import 'package:pi_5_semestre_sales_pro/api/api_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProdutoDetalhado_0 extends _i1.SmartFake
    implements _i2.ProdutoDetalhado {
  _FakeProdutoDetalhado_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i2.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  _i4.Future<List<_i2.VendaMensal>> fetchVendasMensais(int? mesSelecionado) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchVendasMensais,
          [mesSelecionado],
        ),
        returnValue:
            _i4.Future<List<_i2.VendaMensal>>.value(<_i2.VendaMensal>[]),
      ) as _i4.Future<List<_i2.VendaMensal>>);

  @override
  _i4.Future<List<_i2.VendasPorCidade>> fetchVendasPorCidade() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchVendasPorCidade,
          [],
        ),
        returnValue: _i4.Future<List<_i2.VendasPorCidade>>.value(
            <_i2.VendasPorCidade>[]),
      ) as _i4.Future<List<_i2.VendasPorCidade>>);

  @override
  _i4.Future<List<Map<String, dynamic>>> fetchCidadesMaisVenderam(int? mes) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchCidadesMaisVenderam,
          [mes],
        ),
        returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<List<_i2.ClienteMaisComprou>> fetchClientesMaisCompraram(
          int? mes) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchClientesMaisCompraram,
          [mes],
        ),
        returnValue: _i4.Future<List<_i2.ClienteMaisComprou>>.value(
            <_i2.ClienteMaisComprou>[]),
      ) as _i4.Future<List<_i2.ClienteMaisComprou>>);

  @override
  _i4.Future<List<dynamic>> fetchProdutosMaisVendidosMes(int? mes) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchProdutosMaisVendidosMes,
          [mes],
        ),
        returnValue: _i4.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i4.Future<List<dynamic>>);

  @override
  _i4.Future<List<dynamic>> fetchProdutosMaisVendidosPorMes(int? mes) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchProdutosMaisVendidosPorMes,
          [mes],
        ),
        returnValue: _i4.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i4.Future<List<dynamic>>);

  @override
  _i4.Future<List<double>> fetchPieChartDataByMonth(String? month) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPieChartDataByMonth,
          [month],
        ),
        returnValue: _i4.Future<List<double>>.value(<double>[]),
      ) as _i4.Future<List<double>>);

  @override
  _i4.Future<List<Map<String, dynamic>>> fetchTopProductsByMonth(
          String? month) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchTopProductsByMonth,
          [month],
        ),
        returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<List<_i2.TicketMedio>> fetchTicketMedio() => (super.noSuchMethod(
        Invocation.method(
          #fetchTicketMedio,
          [],
        ),
        returnValue:
            _i4.Future<List<_i2.TicketMedio>>.value(<_i2.TicketMedio>[]),
      ) as _i4.Future<List<_i2.TicketMedio>>);

  @override
  _i4.Future<List<_i2.TicketMedioProduto>> fetchTicketMedioPorProduto() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchTicketMedioPorProduto,
          [],
        ),
        returnValue: _i4.Future<List<_i2.TicketMedioProduto>>.value(
            <_i2.TicketMedioProduto>[]),
      ) as _i4.Future<List<_i2.TicketMedioProduto>>);

  @override
  _i4.Future<List<_i2.ProdutoRecomendado>> fetchRecomendacoes(int? idCliente) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchRecomendacoes,
          [idCliente],
        ),
        returnValue: _i4.Future<List<_i2.ProdutoRecomendado>>.value(
            <_i2.ProdutoRecomendado>[]),
      ) as _i4.Future<List<_i2.ProdutoRecomendado>>);

  @override
  _i4.Future<List<_i2.ProdutoRecomendado>> fetchRecomendacoesCliente(
          int? idCliente) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchRecomendacoesCliente,
          [idCliente],
        ),
        returnValue: _i4.Future<List<_i2.ProdutoRecomendado>>.value(
            <_i2.ProdutoRecomendado>[]),
      ) as _i4.Future<List<_i2.ProdutoRecomendado>>);

  @override
  _i4.Future<_i2.ProdutoDetalhado> fetchDetalhesProduto(String? codigo) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchDetalhesProduto,
          [codigo],
        ),
        returnValue:
            _i4.Future<_i2.ProdutoDetalhado>.value(_FakeProdutoDetalhado_0(
          this,
          Invocation.method(
            #fetchDetalhesProduto,
            [codigo],
          ),
        )),
      ) as _i4.Future<_i2.ProdutoDetalhado>);

  @override
  _i4.Future<List<_i2.CidadeVenda>> fetchTopCidades() => (super.noSuchMethod(
        Invocation.method(
          #fetchTopCidades,
          [],
        ),
        returnValue:
            _i4.Future<List<_i2.CidadeVenda>>.value(<_i2.CidadeVenda>[]),
      ) as _i4.Future<List<_i2.CidadeVenda>>);
}
